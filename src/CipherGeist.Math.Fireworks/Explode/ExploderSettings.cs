namespace CipherGeist.Math.Fireworks.Explode;

/// <summary>
/// DTO - stores constants needed for an explosion creation.
/// </summary>
public class ExploderSettings
{
	/// <summary>
	/// Gets or sets m - Parameter controlling the total number of sparks generated
	/// by FireworkAlgorithmSettings.LocationsNumber.
	/// </summary>
	public double ExplosionSparksNumberModifier { get; set; }

	/// <summary>
	/// Gets or sets a - Constant,
	/// has to be 0 &lt; a &lt; <see cref="ExploderSettings"/>.ExplosionSparksNumberUpperBound.
	/// </summary>
	public double ExplosionSparksNumberLowerBound { get; set; }

	/// <summary>
	/// Gets or sets b - Constant,
	/// has to be <see cref="ExploderSettings"/>.ExplosionSparksNumberLowerBound &lt; b &lt; 1.
	/// </summary>
	public double ExplosionSparksNumberUpperBound { get; set; }

	/// <summary>
	/// Gets or sets Â - Maximum explosion amplitude.
	/// </summary>
	public double ExplosionSparksMaximumAmplitude { get; set; }

	/// <summary>
	/// Gets or sets the amplification coefficent (C_a) used in the Dynamic Fireworks Algorithm.
	/// </summary>
	public double AmplificationCoefficent { get; set; }

	/// <summary>
	/// Gets or sets the reduction coefficent (C_r) used in the Dynamic Fireworks Algorithm.
	/// </summary>
	public double ReductionCoefficent { get; set; }

	/// <summary>
	/// Gets or sets the number of specific sparks generated by an explosion.
	/// </summary>
	/// <remarks>No such setting in the 2010 paper.</remarks>
	public int SpecificSparksPerExplosionNumber { get; set; }

	/// <summary>
	/// Gets or sets the maximum iteration count for this run. 
	/// </summary>
	public int MaximumIterationCount { get; set; }
}